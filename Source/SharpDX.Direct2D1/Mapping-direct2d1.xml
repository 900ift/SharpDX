<?xml version="1.0" encoding="utf-8"?>
<!--
// Copyright (c) 2010-2011 SharpDX - Alexandre Mutel
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
-->
<config id="sharpdx-direct2d1" depends="sharpdx sharpdx-dxgi" xmlns="urn:SharpGen.Config">
  
  <namespace>SharpDX.Direct2D1</namespace>
  <assembly>SharpDX.Direct2D1</assembly>

  <!--<include-prolog>
    #define _D2D1_HELPER_H_
  </include-prolog>-->

  <include file="dcommon.h" attach="true"/>
  <include file="d2d1.h" attach="true" />
  <include file="d2derr.h" attach="true" />
  <ifdef name="WIN8">
    <include file="d2d1effects.h" attach="true" />
    <include file="d2d1_1.h" attach="true" />
    <include file="d2d1effectauthor.h" attach="true" />
  </ifdef>

  <naming />
  
  <extension>
    <context>sharpdx-direct2d1-ext</context>
    <context>dcommon</context>
    <context>d2d1</context>
    <context>d2derr</context>
    <context>d2d1_1</context>
    <context>d2d1effects</context>
    <context>d2d1effectauthor</context>
    
    <const from-guid="CLSID_D2D1([A-Z].*)" class="SharpDX.Direct2D1.Effect" type="System.Guid" name="$1">new System.Guid("$1")</const>
    <const from-guid="CLSID_D2D12DAffineTransform" class="SharpDX.Direct2D1.Effect" type="System.Guid" name="AffineTransform2D">new System.Guid("$1")</const>
    <const from-guid="CLSID_D2D13DPerspectiveTransform" class="SharpDX.Direct2D1.Effect" type="System.Guid" name="PerspectiveTransform3D">new System.Guid("$1")</const>
    <const from-guid="CLSID_D2D13DTransform" class="SharpDX.Direct2D1.Effect" type="System.Guid" name="Transform3D">new System.Guid("$1")</const>

    <create class="ResultCode" visibility="public"/>
    <const from-macro="D2DERR_(.*)" type="SharpDX.Result" cpp-type="int" name="$1" class="SharpDX.Direct2D1.ResultCode" visibility="public static readonly" />
    
    <create class="D2D1" />
    <context-clear />
  </extension>
  
  <bindings>
    <bind from="D2D_SIZE_F" to="SharpDX.DrawingSizeF" />
    <bind from="D2D_SIZE_U" to="SharpDX.DrawingSize" />
    <bind from="D2D_RECT_U" to="SharpDX.Rectangle" />
    <bind from="D2D_RECT_F" to="SharpDX.RectangleF" />
    <bind from="D2D_POINT_2F" to="SharpDX.DrawingPointF" />
    <bind from="D2D_POINT_2U" to="SharpDX.DrawingPoint" />
    <bind from="D2D_COLOR_F" to="SharpDX.Color4" />
    <bind from="D2D_MATRIX_3X2_F" to="SharpDX.Matrix3x2" />
    <bind from="D2D_MATRIX_4X4_F" to="SharpDX.Matrix" />
    <bind from="IPrintDocumentPackageTarget" to="SharpDX.ComObject" />
  </bindings>
  
  <mapping>
    <context>sharpdx-direct2d1-ext</context>
    <context>dcommon</context>
    <context>d2derr</context>
    <context>d2d1</context>
    <context>d2d1_1</context>
    <context>d2d1effects</context>
    <context>d2d1effectauthor</context>

    <!--
    // *****************************************************************
    // D2D1 Enumerations
    // *****************************************************************
    -->
    <map enum="D2D1(.*)" name-tmp="$1" />
    <map enum-item="D2D1_FEATURE_LEVEL_(.*)" name="Level_$1" />
    <map enum-item="D2D1_GAMMA_2_2" name="StandardRgb" />
    <map enum-item="D2D1_GAMMA_1_0" name="Linear" />

    <map enum-item="D2D1_BUFFER_PRECISION_([0-9]+)BPC_(.*)" name-tmp="PER_CHANNEL_$1_$2" />

    <map enum-item="D2D1_CHANNEL_DEPTH_1" name-tmp="One" />
    <map enum-item="D2D1_CHANNEL_DEPTH_4" name-tmp="Four" />

    <map enum="D2D1_2DAFFINETRANSFORM_INTERPOLATION_MODE" name="AffineTransform2DInterpolationMode"/>
    <map enum="D2D1_2DAFFINETRANSFORM_PROP" name="AffineTransform2DProperties"/>
    <map enum="D2D1_3DPERSPECTIVETRANSFORM_INTERPOLATION_MODE" name="PerspectiveTransform3DInteroplationMode"/>
    <map enum="D2D1_3DPERSPECTIVETRANSFORM_PROP" name="PerspectiveTransform3DProperties"/>
    <map enum="D2D1_3DTRANSFORM_INTERPOLATION_MODE" name="Transform3DInterpolationMode"/>
    <map enum="D2D1_3DTRANSFORM_PROP" name="Transform3DProperties"/>
    <map enum="D2D1_ARITHMETICCOMPOSITE_PROP" name="ArithmeticCompositeProperties"/>
    <map enum="D2D1_ATLAS_PROP" name="AtlasProperties"/>
    <map enum="D2D1_BITMAPSOURCE_ALPHA_MODE" name="BitmapSourceAlphaMode"/>
    <map enum="D2D1_BITMAPSOURCE_INTERPOLATION_MODE" name="BitmapSourceInterpolationMode"/>
    <map enum="D2D1_BITMAPSOURCE_PROP" name="BitmapSourceProperties"/>
    <map enum="D2D1_BLEND_PROP" name="BlendProperties"/>
    <map enum="D2D1_BORDER_PROP" name="BorderProperties"/>
    <map enum="D2D1_BRIGHTNESS_PROP" name="BrightnessProperties"/>
    <map enum="D2D1_COLORMANAGEMENT_ALPHA_MODE" name="ColorManagementAlphaMode"/>
    <map enum="D2D1_COLORMANAGEMENT_PROP" name="ColorManagementProperties"/>
    <map enum="D2D1_COLORMANAGEMENT_RENDERING_INTENT" name="ColorManagementRenderingIntent"/>
    <map enum="D2D1_COLORMATRIX_ALPHA_MODE" name="ColorMatrixAlphaMode"/>
    <map enum="D2D1_COLORMATRIX_PROP" name="ColorMatrixProperties"/>
    <map enum="D2D1_CONVOLVEMATRIX_PROP" name="ConvoleMatrixProperties"/>
    <map enum="D2D1_CONVOLVEMATRIX_SCALE_MODE" name="ConvoleMatrixScaleMode"/>
    <map enum="D2D1_CROP_PROP" name="CropProperties"/>
    <map enum="D2D1_DIRECTIONALBLUR_OPTIMIZATION" name="DirectionalBlurOptimization"/>
    <map enum="D2D1_DIRECTIONALBLUR_PROP" name="DirectionalBlurProperties"/>
    <map enum="D2D1_DISCRETETRANSFER_PROP" name="DiscreteTransferProperties"/>
    <map enum="D2D1_DISPLACEMENTMAP_PROP" name="DisplacementMapProperties"/>
    <map enum="D2D1_DISPLACEMENTMAP_X_CHANNEL_SELECT" name="DisplacementMapSelectChannelX"/>
    <map enum="D2D1_DISPLACEMENTMAP_Y_CHANNEL_SELECT" name="DisplacementMapSelectChannelY"/>
    <map enum="D2D1_DISTANTDIFFUSE_PROP" name="DistantDiffuseProperties"/>
    <map enum="D2D1_DISTANTDIFFUSE_SCALE_MODE" name="DistantDiffuseScaleMode"/>
    <map enum="D2D1_DISTANTSPECULAR_PROP" name="DistantSpecularProperties"/>
    <map enum="D2D1_DISTANTSPECULAR_SCALE_MODE" name="DistantSpecularScaleMode"/>
    <map enum="D2D1_DPICOMPENSATION_INTERPOLATION_MODE" name="DpiCompensationInterpolationMode"/>
    <map enum="D2D1_DPICOMPENSATION_PROP" name="DpiCompensationProperties"/>
    <map enum="D2D1_ENUM_0" name="InterpolationModeDefinition"/>
    <map enum-item="D2D1_INTERPOLATION_MODE_DEFINITION_(.*)" name-tmp="$1"/>
    <map enum="D2D1_FLOOD_PROP" name="FloodProperties"/>
    <map enum="D2D1_GAMMATRANSFER_PROP" name="GammaTransferProperties"/>
    <map enum="D2D1_GAUSSIANBLUR_OPTIMIZATION" name="GaussianBlurOptimization"/>
    <map enum="D2D1_GAUSSIANBLUR_PROP" name="GaussianBlurProperties"/>
    <map enum="D2D1_HIGHQUALITYSCALE_PROP" name="HighQualityScaleProperties"/>
    <map enum="D2D1_HISTOGRAM_PROP" name="HistogramProperties"/>
    <map enum="D2D1_HUEROTATION_PROP" name="HueRotationProperties"/>
    <map enum="D2D1_LINEARTRANSFER_PROP" name="LinearTransferProperties"/>
    <map enum="D2D1_MORPHOLOGY_PROP" name="MorphologyProperties"/>
    <map enum="D2D1_POINTDIFFUSE_PROP" name="PointDiffuseProperties"/>
    <map enum="D2D1_POINTDIFFUSE_SCALE_MODE" name="PointDiffuseScaleMode"/>
    <map enum="D2D1_POINTSPECULAR_PROP" name="PointSpecularProperties"/>
    <map enum="D2D1_POINTSPECULAR_SCALE_MODE" name="PointSpecularScaleMode"/>

    <map enum="D2D1_SATURATION_PROP" name="SaturationProperties"/>
    <map enum="D2D1_SHADOW_PROP" name="ShadowProperties"/>
    <map enum="D2D1_SPOTDIFFUSE_PROP" name="SpotDiffuseProperties"/>
    <map enum="D2D1_SPOTDIFFUSE_SCALE_MODE" name="SpotDiffuseScaleMode"/>
    <map enum="D2D1_SPOTSPECULAR_PROP" name="SpotSpecularProperties"/>
    <map enum="D2D1_SPOTSPECULAR_SCALE_MODE" name="SpotSpecularScaleMode"/>
    <map enum="D2D1_SUBPROPERTY" name="SubProperty"/>
    <map enum="D2D1_TABLETRANSFER_PROP" name="TableTransferProperties"/>
    <map enum="D2D1_TILE_PROP" name="TileProperties"/>
    <map enum="D2D1_TURBULENCE_PROP" name="TurbulenceProperties"/>

    <map enum="D2D1_LAYER_OPTIONS" flags="true"/>
    <map enum="D2D1_LAYER_OPTIONS1" flags="true"/>

    <!-- For dcommon -->
    <map enum="DWRITE(.+)" name-tmp="$1" />

    <!--
    // *****************************************************************
    // D2D1 Structures
    // *****************************************************************
    -->
    <map struct="D2D1(.*)" name-tmp="$1" />
    <map field="D2D1_BLEND_DESCRIPTION::blendFactor" type="SHARPDX_COLOR4" array="0"/>
    <map struct="D2D1_BITMAP_PROPERTIES1" struct-to-class="true"/>
    <map field="D2D1_BITMAP_PROPERTIES1::colorContext" name="ColorContextPointer" visibility="internal"/>

    <!--
    // *****************************************************************
    // D2D1 Interfaces
    // *****************************************************************
    -->
    <map interface="ID2D1(.+)" name-tmp="$1" />

    <!--<map param="ID2D1Device::CreatePrintControl::wicFactory" type="IUnknown"/>-->
    <!--<map param="ID2D1DeviceContext::CreateBitmapFromWicBitmap::wicBitmapSource" type="IUnknown"/>
    <map param="ID2D1RenderTarget::CreateBitmapFromWicBitmap::wicBitmapSource" type="IUnknown"/>-->
    <!--<map param="ID2D1Factory::CreateWicBitmapRenderTarget::target" type="IUnknown"/>-->
    <!--<remove method="ID2D(\d+)RenderTarget::CreateBitmapFromWicBitmap" />
    <remove method="ID2D(\d+)Factory::CreateWicBitmapRenderTarget" />-->
    <map method="ID2D1Bitmap::CopyFrom.*" visibility="internal" />
    <map method="ID2D1Bitmap::GetDpi" visibility="internal" />
    <map interface="ID2D1DCRenderTarget" name="DeviceContextRenderTarget" />
    <map method="ID2D1DCRenderTarget::BindDC" name="BindDeviceContext" />
    <map method="ID2D1Factory::GetDesktopDpi" visibility="internal" />
    <map method="ID2D(\d+)Factory\d?::Create.*" visibility="internal" />

    <map param="ID2D1Factory1::CreateDevice::d2dDevice" attribute="out fast"/>
    <map param="ID2D1Factory1::CreateStrokeStyle::strokeStyle" attribute="out fast"/>
    <map param="ID2D1Factory1::CreatePathGeometry::pathGeometry" attribute="out fast"/>
    <map param="ID2D1Factory1::CreateDrawingStateBlock::drawingStateBlock" attribute="out fast"/>

    <!-- Create Fast out arguments for all Create.* methods -->
    <map param="ID2D(\d+)Factory::CreateRectangleGeometry::rectangleGeometry" attribute="out fast"/>
    <map param="ID2D(\d+)Factory::CreateRoundedRectangleGeometry::roundedRectangleGeometry" attribute="out fast"/>
    <map param="ID2D(\d+)Factory::CreateEllipseGeometry::ellipseGeometry" attribute="out fast"/>
    <map param="ID2D(\d+)Factory::CreateGeometryGroup::geometryGroup" attribute="out fast"/>
    <map param="ID2D(\d+)Factory::CreateTransformedGeometry::transformedGeometry" attribute="out fast"/>
    <map param="ID2D(\d+)Factory::CreatePathGeometry::pathGeometry" attribute="out fast"/>
    <map param="ID2D(\d+)Factory::CreateStrokeStyle::strokeStyle" attribute="out fast"/>
    <map param="ID2D(\d+)Factory::CreateDrawingStateBlock::drawingStateBlock" attribute="out fast"/>
    <map param="ID2D(\d+)Factory::CreateHwndRenderTarget::hwndRenderTarget" attribute="out fast"/>
    <map param="ID2D(\d+)Factory::CreateDxgiSurfaceRenderTarget::renderTarget" attribute="out fast"/>
    <map param="ID2D(\d+)Factory::CreateDCRenderTarget::dcRenderTarget" attribute="out fast"/>
    <map param="ID2D(\d+)Factory::CreateWicBitmapRenderTarget::renderTarget" attribute="out fast"/>

    <map method="ID2D\dDevice::Create.*" visibility="internal"/>
    <map param="ID2D\dDevice::CreateDeviceContext::deviceContext" attribute="out fast"/>
    <map param="ID2D\dDevice::CreatePrintControl::printControl" attribute="out fast"/>

    <map method="ID2D\dDeviceContext::Create.*" visibility="internal"/>
    <map param="ID2D\dDeviceContext::CreateBitmap::bitmap" attribute="out fast"/>
    <map param="ID2D\dDeviceContext::CreateBitmapBrush::bitmapBrush" attribute="out fast"/>
    <map param="ID2D\dDeviceContext::CreateBitmapFromDxgiSurface::bitmap" attribute="out fast"/>
    <map param="ID2D\dDeviceContext::CreateColorContext::colorContext" attribute="out fast"/>
    <map param="ID2D\dDeviceContext::CreateColorContextFromFilename::colorContext" attribute="out fast"/>
    <map param="ID2D\dDeviceContext::CreateColorContextFromWicColorContext::colorContext" attribute="out fast"/>
    <map param="ID2D\dDeviceContext::CreateCommandList::commandList" attribute="out fast"/>
    <map param="ID2D\dDeviceContext::CreateEffect::effect" attribute="out fast"/>
    <map param="ID2D\dDeviceContext::CreateGradientStopCollection::gradientStopCollection1" attribute="out fast"/>
    <map param="ID2D\dDeviceContext::CreateImageBrush::imageBrush" attribute="out fast"/>

    <map param="ID2D\dDeviceContext::CreateBitmapFromWicBitmap::bitmapProperties" attribute="in optional"/>

    <map method="ID2D1Geometry::CombineWithGeometry" name="Combine" />
    <map method="ID2D1Geometry::CompareWithGeometry" name="Compare" />
    <map param="relation" return="true" />
    <map param="ID2D1Geometry::ComputeArea::area" return="true" />
    <map param="ID2D1Geometry::ComputeLength::length" return="true" />
    <map param="ID2D1Geometry::ComputePointAtLength::point" return="true" />
    <map param="ID2D1Geometry::FillContainsPoint::contains" return="true" />
    <map param="ID2D1Geometry::GetBounds::bounds" return="true" />
    <map param="ID2D1Geometry::GetWidenedBounds::bounds" return="true" />
    <map param="ID2D1Geometry::StrokeContainsPoint::contains" return="true" />
    <map method="ID2D1GeometryGroup::GetSourceGeometries" visibility="internal" />
    <map param="ID2D1GdiInteropRenderTarget::GetDC::hdc" return="true" />
    <map interface="ID2D1HwndRenderTarget" name="WindowRenderTarget" />
    <map param="ID2D1PathGeometry::Open::geometrySink" return="true" />
    <map method="ID2D1RectangleGeometry::GetRect" name="GetRectangle" />
    
    <map method="ID2D(\d+)RenderTarget::Create.*" visibility="internal" />

    <!-- Create Fast out arguments for all Create.* methods -->
    <map param="ID2D(\d+)RenderTarget::CreateBitmap::bitmap" attribute="out fast"/>
    <map param="ID2D(\d+)RenderTarget::CreateSharedBitmap::bitmap" attribute="out fast"/>
    <map param="ID2D(\d+)RenderTarget::CreateBitmapBrush::bitmapBrush" attribute="out fast"/>
    <map param="ID2D(\d+)RenderTarget::CreateSolidColorBrush::solidColorBrush" attribute="out fast"/>
    <map param="ID2D(\d+)RenderTarget::CreateGradientStopCollection::gradientStopCollection" attribute="out fast"/>
    <map param="ID2D(\d+)RenderTarget::CreateLinearGradientBrush::linearGradientBrush" attribute="out fast"/>
    <map param="ID2D(\d+)RenderTarget::CreateRadialGradientBrush::radialGradientBrush" attribute="out fast"/>
    <map param="ID2D(\d+)RenderTarget::CreateCompatibleRenderTarget::bitmapRenderTarget" attribute="out fast"/>
    <map param="ID2D(\d+)RenderTarget::CreateLayer::layer" attribute="out fast"/>
    <map param="ID2D(\d+)RenderTarget::CreateMesh::mesh" attribute="out fast"/>

    <map param="ID2D(\d+)RenderTarget::CreateSharedBitmap::data" attribute="in" />
    <map method="ID2D1RenderTarget::DrawTextA" visibility="internal" name="DrawText" />
    <map method="ID2D1RenderTarget::(.*)Dpi" visibility="internal" />
    <map method="ID2D(\d+)Mesh::Open" visibility="internal" name="Open_" />
    <map interface="ID2D(\d+).*Sink" callback="true" callback-dual="true" />

    <!--<map param="ID2D1DeviceContext::CreateColorContextFromWicColorContext::wicColorContext" type="IUnknown"/>
    <map param="ID2D1DeviceContext::CreateColorContextFromWicColorContext::colorContext" type="IUnknown"/>-->

    <!--<map param="ID2D1EffectContext::CreateColorContextFromWicColorContext::wicColorContext" type="IUnknown"/>
    <map param="ID2D1EffectContext::CreateColorContextFromWicColorContext::colorContext" type="IUnknown"/>-->

    <map method="ID2D1Factory1::RegisterEffectFromString" visibility="internal"/>
    
    <!--
    // *****************************************************************
    // D2D1 Functions
    // *****************************************************************
    -->
    <map function="D2D1(.+)" name-tmp="$1" />
    <map function="D2D1.*" dll='"d2d1.dll"' group="SharpDX.Direct2D1.D2D1" />

    <map param="D2D1CreateDevice::d2dDevice" attribute="out fast"/>
    <map param="D2D1CreateDeviceContext::d2dDeviceContext" attribute="out fast"/>

    <context-clear />
  </mapping>
</config>