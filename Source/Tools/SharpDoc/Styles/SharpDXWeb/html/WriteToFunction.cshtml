@*
// Copyright (c) 2010-2012 SharpDX - Alexandre Mutel
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.       
*@
@model SharpDoc.TemplateContext
@using SharpDoc.Model
@using System.IO;
@using SharpDoc;
@functions {

        private const int IndexStart = 1000;

        private const string JoomlaContentUrl = "index.php?option=com_content&amp;Itemid=109&amp;catid=13&amp;id={0}&amp;lang=en&amp;view=article";

	public static string SqlEscapeString(string text)
    {
		if (text == null)
            return null;
        text = text.Replace("\\", "\\\\");
        text = text.Replace("'", "\\'");
        return text;
    }

    public void WriteToSql(IModelReference member, string content)
    {
        var writer = (StreamWriter)Model.Param.SqlWriter;

		if (member == null)
        {
			if (content == null)
            {
                writer.WriteLine(@"
SET @s = CONCAT(""ALTER TABLE `sdx_assets` 	AUTO_INCREMENT="",@sdx_assets_max_id);
PREPARE stmt FROM @s;
EXECUTE stmt;
DEALLOCATE PREPARE stmt;
SET @s = CONCAT(""ALTER TABLE `sdx_content` 	AUTO_INCREMENT="",@sdx_content_max_id);
PREPARE stmt FROM @s;
EXECUTE stmt;
DEALLOCATE PREPARE stmt;				
");				
				writer.Flush();
            }
            return;
        }

        var memberIndex = member.Index + IndexStart;
        var url = string.Format(JoomlaContentUrl, member.Index + IndexStart);
		
		// Use lower case for pages
        var pageId = member.PageId;
        pageId = pageId.Replace("_", "-");
        pageId = pageId.ToLowerInvariant();

        writer.WriteLine(@"
INSERT INTO `sdx_sh404sef_urls` (`id`, `cpt`, `rank`, `oldurl`, `newurl`, `dateadd`) 
VALUES (" + memberIndex + @", 0, 0, 'documentation/" + pageId + @"', '" + url + @"', '0000-00-00');

INSERT INTO
  sdx_assets (
  id,
  parent_id, 
  lft, 
  rgt, 
  level, 
  name, 
  title, 
  rules)
VALUES(
  " + memberIndex + @",
  @new_jos_banners_parent_id, 
  @new_jos_assets_id_last_lft:=@new_jos_assets_id_last_lft+2, 
  @new_jos_assets_id_last_lft+1, 
  4, 
  CONCAT('com_content.article.', @new_jos_assets_last_inc:=@new_jos_assets_last_inc+1),
  '" + member.PageTitle + @"',
  '{""core.create"":[],""core.delete"":[],""core.edit"":[],""core.edit.state"":[],""core.edit.own"":[]}'
);

INSERT INTO sdx_content 
(`id`, `asset_id`, `title`, `alias`, `title_alias`, `introtext`, `fulltext`, `state`, `sectionid`, `mask`, `catid`, `created`, `created_by`, `created_by_alias`, `modified`, `modified_by`, `checked_out`, `checked_out_time`, `publish_up`, `publish_down`, `images`, `urls`, `attribs`, `version`, `parentid`, `ordering`, `metakey`, `metadesc`, `access`, `hits`, `metadata`, `featured`, `language`, `xreference`) VALUES
(" + memberIndex + @"," + memberIndex + @", '" + SqlEscapeString(member.PageTitle) + @"', '" + pageId + @"', '', '" + SqlEscapeString(content) + @"', '', 1, 0, 0, 13, '2012-04-23 21:25:14', 42, '', '0000-00-00 00:00:00', 0, 0, '0000-00-00 00:00:00', '2012-04-23 21:25:14', '0000-00-00 00:00:00', '{}', '{}', '{}', 1, 0, 0, '', '', 1, 0, '{}', 0, '*', '');");

		writer.Flush();
    }

    public Func<LinkDescriptor, string> PreviousLinkResolver { get; set; }

    public string LinkToSqlDb(LinkDescriptor link)
    {
        string url = null;
        switch (link.Type) {
            case LinkType.Local:
                url = string.Format(JoomlaContentUrl, link.Index + IndexStart);
                break;
            default:
                return PreviousLinkResolver(link);
        }
        return string.Format("<a href=\"{0}\" {1}>{2}</a>", url, link.Attributes ?? "", Escape(link.Name));
    }
}

@{
	// Replace default link resolver and use a special one for local links
    PreviousLinkResolver = Model.LinkResolver;
    Model.LinkResolver = LinkToSqlDb;

	Param.FileExt = "";
	Param.RootLink = "/documentation/";

    const string fileName = "sharpdx-joomla.sql";
	if (File.Exists(fileName))
    {
        File.Delete(fileName);
    }
    var writer = new StreamWriter(new FileStream(fileName, FileMode.CreateNew, FileAccess.Write));
    Model.Param.SqlWriter = writer;

	writer.WriteLine(@"
ALTER TABLE `sdx_sh404sef_urls` 	AUTO_INCREMENT=0;
TRUNCATE TABLE `sdx_sh404sef_urls`;	
delete a, b from sdx_assets as a, sdx_content as b where a.id = b.asset_id and b.catid = 13 and b.title != 'Documentation';
SET @sdx_assets_max_id=(SELECT MAX(id) FROM sdx_assets)+1;
SET @sdx_content_max_id=(SELECT MAX(id) FROM sdx_content)+1;
  SET @new_jos_assets_last_inc=(
  SELECT (SUBSTRING_INDEX(name, '.', -1)*1) AS lastcatid
  FROM sdx_assets WHERE name LIKE 'com_content.article.%'
  ORDER BY lastcatid DESC LIMIT 0,1);
SET @new_jos_assets_last_inc=(SELECT IFNULL(@new_jos_assets_last_inc, 0));
SET @new_jos_assets_id_last_lft=(SELECT MAX(lft) FROM sdx_assets);
SET @new_jos_banners_parent_id=54;
");

    Model.WriteTo = WriteToSql;
}